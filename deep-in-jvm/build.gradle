plugins {
    id 'java'
}

group 'jvm.tech.demonlee'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.apache.logging.log4j:log4j-api:2.22.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.0'

    testImplementation 'org.apache.logging.log4j:log4j-api:2.22.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.22.0'

    annotationProcessor("com.google.auto.value:auto-value:1.10.4")
    compileOnly("com.google.auto.value:auto-value-annotations:1.10.4")
    implementation("com.google.guava:guava:33.1.0-jre")
}

sourceSets {
    main {
        java {
            // 包含特定的包
            // include 'jvm/tech/demonlee/**'

            // 如果需要排除某些子包或类，可以使用 exclude
            // exclude 'jvm/tech/demonlee/**'
        }
    }

    agent {
        java {
            srcDir 'src/main/java'
            exclude 'jvm/tech/demonlee/**'
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'jvm.tech.demonlee.Main'
        )
    }

    // 将编译的类和资源包括在JAR中
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.register('agentJar', Jar) {
    manifest {
        attributes(
                'Main-Class': 'jvm.bytecode.demonlee.AttachAgentMain'
        )
    }

    from sourceSets.agent.output

    // 将编译的类和资源包括在JAR中
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveClassifier.set("agent")

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
    useJUnitPlatform()
}

tasks.test {
    // for print GC via Junit5 test cases

    // for Java 9+
    // jvmArgs("-XX:StartFlightRecording=dumponexit=true,filename=./gc.jfr", "-Xlog:gc*,gc+ref*=trace:file=./gc.log:time")
    jvmArgs("-Xlog:gc,gc+ref*=trace:file=./gc.log:time")

    // for Java 8
    // jvmArgs("-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintReferenceGC")
}
